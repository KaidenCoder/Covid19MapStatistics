{"version":3,"sources":["images/CoronaImage.png","components/utils/api.js","components/Cards.js","components/MapD.js","components/ChartContinent.js","components/CountryPicker.js","components/BarChart.js","components/Navbar.js","components/Footer.js","images/noimage.jpeg","components/news/Newscovid.js","App.js","reportWebVitals.js","index.js"],"names":["url2","fetchData","process","a","axios","get","response","modifiedData","confirmed","data","cases","recovered","deaths","todayCases","fetchContinentData","map","dailyData","continent","fetchDataChangeable","country","changeableUrl","fetchCountriesData","latitude","countryInfo","lat","longitude","long","id","_id","Cards","props","useState","setDailyData","useEffect","fetchCAPI","className","style","padding","textAlign","width","value","displayType","thousandSeparator","MapD","countryData","setCountryData","fetchCountAPI","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","d","i","Marker","position","Popup","ChartContinent","lineChart","length","labels","datasets","label","borderColor","fill","scope","background","color","border","CountryPicker","handleCountryChange","console","log","defaultValue","onChange","e","target","BarChart","barChart","backgroundColor","options","legend","display","title","text","Navbar","to","Footer","href","Newscovid","news","setNews","fetch","then","res","json","results","undefined","borderRadius","src","fields","thumbnail","NoImage","height","alt","letterSpacing","paddingBottom","headline","fontSize","opacity","publication","trailText","webUrl","format","date","webPublicationDate","App","state","fetchedData","setState","fetchedCData","this","CoronaImage","exact","path","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53e549a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CoronaImage.9e5d4fc7.png\";","import axios from 'axios'\n\nconst url1 = 'https://disease.sh/v3/covid-19/continents'\nconst url2 = 'https://disease.sh/v3/covid-19'\nconst url3 = 'https://disease.sh/v3/covid-19/countries'\nconst url = 'https://disease.sh/v3/covid-19/all'\nconst newsapi = `https://newsapi.org/v2/top-headlines?language=en&q=covid&apiKey=${process.env.REACT_APP_API_KEY}`\n\nexport const fetchData = async () => {\n    try {\n        const response = await axios.get(url)\n        const modifiedData = {\n            confirmed: response.data.cases,\n            recovered: response.data.recovered,\n            deaths: response.data.deaths,\n            todayCases: response.data.todayCases\n        }\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\nexport const fetchContinentData = async () => {\n    try {\n        const response = await axios.get(url1)\n        const modifiedData = response.data.map((dailyData) => ({\n            cases: dailyData.cases,\n            recovered: dailyData.recovered,\n            deaths: dailyData.deaths,\n            continent: dailyData.continent\n        }))\n        return modifiedData\n\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDataChangeable = async (country) => {\n    let changeableUrl = `${url2}/countries/India`\n    if (country) {\n        changeableUrl = `${url2}/countries/${country}`\n    }\n    try {\n        const response = await axios.get(changeableUrl)\n        const modifiedData = {\n            confirmed: response.data.cases,\n            recovered: response.data.recovered,\n            deaths: response.data.deaths,\n            todayCases: response.data.todayCases,\n            country: response.data.country\n        }\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountriesData = async () => {\n    try {\n        const response = await axios.get(url3)\n        const modifiedData = response.data.map((dailyData) => ({\n            country: dailyData.country,\n            confirmed: dailyData.cases,\n            recovered: dailyData.recovered,\n            deaths: dailyData.deaths,\n            latitude: dailyData.countryInfo.lat,\n            longitude: dailyData.countryInfo.long,\n            id: dailyData.countryInfo._id\n        }))\n        return modifiedData\n\n    } catch (error) {\n\n    }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faBriefcaseMedical, faSkullCrossbones, faAmbulance } from '@fortawesome/free-solid-svg-icons'\nimport NumberFormat from 'react-number-format';\nimport { fetchData } from './utils/api'\n\nconst Cards = (props) => {\n\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchCAPI = async () => {\n            const data = await fetchData()\n            setDailyData(data)\n        }\n        fetchCAPI()\n    }, [])\n\n    return (\n        <div >\n            <div className=\"container linechart\">\n                <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>COVID-19 GLOBAL STATS</h3>\n                <div className=\"row\">\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgConfirmedCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\">Confirmed</h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.confirmed} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgRecoveredCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\"> Recovered </h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.recovered} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgDeathsCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\">Deaths</h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.deaths} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards","import React, { useState, useEffect } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { fetchCountriesData } from './utils/api'\nimport NumberFormat from 'react-number-format';\n\nfunction MapD() {\n\n    const [countryData, setCountryData] = useState([])\n\n    useEffect(() => {\n        const fetchCountAPI = async () => {\n            const data = await fetchCountriesData()\n            setCountryData(data)\n        }\n\n        fetchCountAPI()\n    }, [setCountryData])\n\n\n    return (\n        <MapContainer center={[20.5937, 78.9629]} zoom={4} scrollWheelZoom={true}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            {countryData.map((d, i) => (\n\n                <Marker\n                    key={i}\n                    position={[d.latitude, d.longitude]} >\n                    <Popup position={[d.latitude, d.longitude]}>\n                        <div>\n                            <p>Country: {d.country}</p>\n                            <p>Confirmed: <NumberFormat value={d.confirmed} displayType={'text'} thousandSeparator={true} /></p>\n                            <p>Recovered: <NumberFormat value={d.recovered} displayType={'text'} thousandSeparator={true} /></p>\n                            <p>Deaths: <NumberFormat value={d.deaths} displayType={'text'} thousandSeparator={true} /></p>\n                        </div>\n                    </Popup>\n                </Marker>\n\n            ))}\n\n        </MapContainer >\n\n    )\n}\n\nexport default MapD","import React, { useState, useEffect } from 'react';\nimport { fetchContinentData } from './utils/api'\nimport { Line } from 'react-chartjs-2'\nimport NumberFormat from 'react-number-format';\n\nconst ChartContinent = () => {\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchCAPI = async () => {\n            const data = await fetchContinentData()\n            setDailyData(data)\n        }\n        fetchCAPI()\n    }, [])\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line\n                data={{\n                    labels: dailyData.map(({ continent }) => continent),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ cases }) => cases),\n                            label: 'Confirmed',\n                            borderColor: 'red',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ recovered }) => recovered),\n                            label: 'Recovered',\n                            borderColor: 'green',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'blue',\n                            fill: true\n                        }]\n                }}\n            />) :\n            \"Loading\"\n    )\n\n    return (\n        <div className=\"linechart\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Continent Tabular Data</h3>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,0,0.05)', color: 'black', border: \"1px solid black\" }}>Continent</th>\n                        <th scope=\"col\" style={{ background: 'rgba(255,0,0,0.05)', color: 'red', border: \"1px solid black\" }}>Confirmed</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,255,0,0.05)', color: 'green', border: \"1px solid black\" }}>Recovered</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,255,0.05)', color: 'blue', border: \"1px solid black\" }}>Deaths</th>\n                    </tr>\n                </thead>\n                {dailyData.map((d, i) => (\n                    <tbody key={i}>\n                        <tr>\n                            <td style={{ color: 'black', border: \"1px solid black\" }}>  {d.continent}  </td>\n                            <td style={{ color: 'red', border: \"1px solid black\" }}><NumberFormat value={d.cases} displayType={'text'} thousandSeparator={true} /> </td>\n                            <td style={{ color: 'green', border: \"1px solid black\" }}><NumberFormat value={d.recovered} displayType={'text'} thousandSeparator={true} /> </td>\n                            <td style={{ color: 'blue', border: \"1px solid black\" }}><NumberFormat value={d.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                        </tr>\n                    </tbody>\n                ))}\n            </table>\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Line Graph data</h3>\n            {lineChart}\n\n        </div>\n    )\n}\n\nexport default ChartContinent","import React, { useState, useEffect } from 'react'\nimport { fetchCountriesData } from './utils/api'\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [countryData, setCountryData] = useState([])\n\n    useEffect(() => {\n        const fetchCountAPI = async () => {\n            const data = await fetchCountriesData()\n            setCountryData(data)\n        }\n\n        fetchCountAPI()\n    }, [setCountryData])\n    console.log(countryData)\n\n    return (\n        <div>\n            <form>\n                <div className=\"form-group\">\n                    <label style={{ padding: \"20px 0 0 0\", textAlign: \"center\" }}>Country select</label>\n                    <select className=\"form-control countrySelect\" defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                        <option value=\"global\">India</option>\n                        {countryData.map((country, i) =>\n                            <option key={i} value={country.country}>{country.country}</option>\n                        )}\n\n                    </select>\n                </div>\n\n\n            </form>\n        </div>\n    )\n}\n\nexport default CountryPicker","import React from 'react';\nimport { Bar } from 'react-chartjs-2'\nimport NumberFormat from 'react-number-format';\n\nconst BarChart = (props) => {\n    const barChart = (\n        <Bar\n            data={{\n                labels: ['Confirmed', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'Total People Infected by Covid-19 stats',\n                    backgroundColor: ['red', 'green', 'blue'],\n                    data: [props.data.confirmed, props.data.recovered, props.data.deaths]\n                }]\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: `Current state in ${props.country}` }\n            }}\n        />\n\n    )\n\n    return (\n        <div className=\"linechart\">\n            <h3 style={{ padding: \"60px 0 20px 0\", textAlign: \"center\" }}>Covid-19 Stats for {props.data.country} </h3>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,0,0.05)', color: 'black', border: \"1px solid black\" }}>{props.data.country}</th>\n                        <th scope=\"col\" style={{ background: 'rgba(255,0,0,0.05)', color: 'red', border: \"1px solid black\" }}>Confirmed</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,255,0,0.05)', color: 'green', border: \"1px solid black\" }}>Recovered</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,255,0.05)', color: 'blue', border: \"1px solid black\" }}>Deaths</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\" style={{ color: 'black', border: \"1px solid black\" }}>Data</th>\n                        <td style={{ color: 'red', border: \"1px solid black\" }}><NumberFormat value={props.data.confirmed} displayType={'text'} thousandSeparator={true} /> </td>\n                        <td style={{ color: 'green', border: \"1px solid black\" }}><NumberFormat value={props.data.recovered} displayType={'text'} thousandSeparator={true} /> </td>\n                        <td style={{ color: 'blue', border: \"1px solid black\" }}><NumberFormat value={props.data.deaths} displayType={'text'} thousandSeparator={true} /> </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            {barChart}\n\n        </div >\n    )\n}\n\nexport default BarChart","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nconst Navbar = () => {\n    return (\n        <header>\n            <ul className=\"navlink\">\n                <li><Link to=\"/Covid19MapStatistics/\">Global</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/continent/\">Continent</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/country/\">Country</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/map/\">Map</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/covidnews/\">News</Link></li>\n            </ul>\n\n        </header>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div style={{ textAlign: \"center\", padding: \"2em\" }}>\n            Made with ❤️ by <a href=\"https://www.linkedin.com/in/khaidemsandip/\">Khaidem Sandip Singha</a>\n        </div>\n    )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/noimage.b95c1842.jpeg\";","import React, { useState, useEffect } from 'react'\nimport NoImage from '../../images/noimage.jpeg'\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nconst Newscovid = () => {\n    const [news, setNews] = useState([])\n\n    useEffect(() => {\n        fetch(`https://content.guardianapis.com/search?q=covid&format=json&show-tags=contributor&show-section=true&show-fields=headline,trailText,thumbnail,publication,short-url&order-by=newest&show-elements=video&show-references=author&api-key=${process.env.REACT_APP_GUARDIAN_API_KEY}`)\n            .then(res => res.json())\n            .then(data => setNews(data.response.results))\n    }, [setNews])\n\n\n    return (\n        <div className=\"news\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Daily Covid news</h3>\n            {news != undefined ? news.map((data, i) => (\n                <>\n                    <div key={data.webPublicationDate} className=\"news-card\" >\n                        <div className=\"news-img\">\n                            <img style={{ borderRadius: '10px' }} src={data.fields.thumbnail ? data.fields.thumbnail : NoImage} width='100%' height='250px' alt=\"image\" />\n\n                        </div>\n                        <div className=\"news-content\">\n                            <h6 style={{ letterSpacing: '0.14em', paddingBottom: '0.5em' }}>{data.fields.headline ? data.fields.headline : \"No title\"} - <span style={{ fontSize: '0.8em', opacity: \"0.5\" }}>Source: {data.fields.publication ? data.fields.publication : \"Anonymous\"}</span></h6>\n                            <p><span style={{ opacity: \"0.5\" }}>{data.fields.trailText ? data.fields.trailText : \"\"}...</span><a href={data.webUrl}>Read more</a></p>\n                            <p style={{ fontSize: '0.8em', opacity: \"0.5\" }}><Moment format=\"ddd MMM D YYYY LT\" date={data.webPublicationDate} /></p>\n\n                        </div>\n                    </div>\n                </>\n            )) : <p style={{ textAlign: \"center\" }}>Data could not be fetched. Error: 426 Upgrade Required </p>}\n\n        </div>\n    )\n}\n\nexport default Newscovid\n","import './App.css';\nimport React from 'react';\nimport CoronaImage from './images/CoronaImage.png'\nimport { fetchDataChangeable } from './components/utils/api'\nimport Cards from './components/Cards';\nimport MapD from './components/MapD';\nimport ChartContinent from './components/ChartContinent';\nimport CountryPicker from './components/CountryPicker';\nimport BarChart from './components/BarChart';\nimport Navbar from './components/Navbar';\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from './components/Footer';\nimport Newscovid from './components/news/Newscovid';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const fetchedCData = await fetchDataChangeable();\n    this.setState({ data: fetchedCData })\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchDataChangeable(country);\n    this.setState({ data: fetchedData, country: country })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"imgContainer\">\n          <img className=\"imageCss\" src={CoronaImage} alt='Corona' />\n          <Navbar />\n        </div>\n        <Switch>\n          <Route exact path=\"/Covid19MapStatistics\">\n            <Cards />\n\n          </Route>\n          <Route path=\"/Covid19MapStatistics/continent/\">\n            <ChartContinent />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/country/\">\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\n            <BarChart data={this.state.data} country={this.state.country} />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/map/\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Map of Covid-19 Countries</h3>\n            <MapD />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/covidnews/\">\n            <Newscovid />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}