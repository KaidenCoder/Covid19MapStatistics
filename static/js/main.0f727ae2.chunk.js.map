{"version":3,"sources":["images/CoronaImage.png","components/utils/api.js","components/Cards.js","components/MapD.js","images/noimage.jpeg","components/news/Newscovid.js","components/ChartContinent.js","components/CountryPicker.js","components/BarChart.js","components/Navbar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["url2","newsapi","process","fetchData","a","axios","get","response","modifiedData","confirmed","data","cases","recovered","deaths","todayCases","fetchContinentData","map","dailyData","continent","fetchDataChangeable","country","changeableUrl","fetchCountriesData","latitude","countryInfo","lat","longitude","long","id","_id","fetchNewsCovidData","modifiedNewsData","articles","newsData","author","content","description","date","publishedAt","source","name","title","url","image","urlToImage","Cards","props","useState","setDailyData","useEffect","fetchCAPI","className","style","padding","textAlign","width","value","displayType","thousandSeparator","MapD","countryData","setCountryData","fetchCountAPI","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","d","i","Marker","position","Popup","Newscovid","newsdata","setNewsData","fetchNews","console","log","undefined","borderRadius","src","NoImage","height","alt","letterSpacing","paddingBottom","fontSize","opacity","href","format","ChartContinent","lineChart","length","labels","datasets","label","borderColor","fill","scope","background","color","border","CountryPicker","handleCountryChange","defaultValue","onChange","e","target","BarChart","barChart","backgroundColor","options","legend","display","text","Navbar","to","Footer","App","state","fetchedData","setState","fetchedCData","this","CoronaImage","exact","path","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f727ae2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CoronaImage.9e5d4fc7.png\";","import axios from 'axios'\n\nconst url1 = 'https://disease.sh/v3/covid-19/continents'\nconst url2 = 'https://disease.sh/v3/covid-19'\nconst url3 = 'https://disease.sh/v3/covid-19/countries'\nconst url = 'https://disease.sh/v3/covid-19/all'\nconst newsapi = `https://newsapi.org/v2/top-headlines?language=en&q=covid&apiKey=${process.env.REACT_APP_API_KEY}`\n\nexport const fetchData = async () => {\n    try {\n        const response = await axios.get(url)\n        const modifiedData = {\n            confirmed: response.data.cases,\n            recovered: response.data.recovered,\n            deaths: response.data.deaths,\n            todayCases: response.data.todayCases\n        }\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\nexport const fetchContinentData = async () => {\n    try {\n        const response = await axios.get(url1)\n        const modifiedData = response.data.map((dailyData) => ({\n            cases: dailyData.cases,\n            recovered: dailyData.recovered,\n            deaths: dailyData.deaths,\n            continent: dailyData.continent\n        }))\n        return modifiedData\n\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDataChangeable = async (country) => {\n    let changeableUrl = `${url2}/countries/India`\n    if (country) {\n        changeableUrl = `${url2}/countries/${country}`\n    }\n    try {\n        const response = await axios.get(changeableUrl)\n        const modifiedData = {\n            confirmed: response.data.cases,\n            recovered: response.data.recovered,\n            deaths: response.data.deaths,\n            todayCases: response.data.todayCases,\n            country: response.data.country\n        }\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountriesData = async () => {\n    try {\n        const response = await axios.get(url3)\n        const modifiedData = response.data.map((dailyData) => ({\n            country: dailyData.country,\n            confirmed: dailyData.cases,\n            recovered: dailyData.recovered,\n            deaths: dailyData.deaths,\n            latitude: dailyData.countryInfo.lat,\n            longitude: dailyData.countryInfo.long,\n            id: dailyData.countryInfo._id\n        }))\n        return modifiedData\n\n    } catch (error) {\n\n    }\n}\n\n\nexport const fetchNewsCovidData = async () => {\n    try {\n        const response = await axios.get(newsapi)\n\n        const modifiedNewsData = response.data.articles.map((newsData) => ({\n            author: newsData.author,\n            content: newsData.content,\n            description: newsData.description,\n            date: newsData.publishedAt,\n            source: newsData.source.name,\n            title: newsData.title,\n            url: newsData.url,\n            image: newsData.urlToImage\n        }))\n        return modifiedNewsData\n\n    } catch (error) {\n\n    }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faBriefcaseMedical, faSkullCrossbones, faAmbulance } from '@fortawesome/free-solid-svg-icons'\nimport NumberFormat from 'react-number-format';\nimport { fetchData } from './utils/api'\n\nconst Cards = (props) => {\n\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchCAPI = async () => {\n            const data = await fetchData()\n            setDailyData(data)\n        }\n        fetchCAPI()\n    }, [])\n\n    return (\n        <div >\n            <div className=\"container linechart\">\n                <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>COVID-19 GLOBAL STATS</h3>\n                <div className=\"row\">\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgConfirmedCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\">Confirmed</h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.confirmed} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgRecoveredCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\"> Recovered </h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.recovered} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgDeathsCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\">Deaths</h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.deaths} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards","import React, { useState, useEffect } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { fetchCountriesData } from './utils/api'\nimport NumberFormat from 'react-number-format';\n\nfunction MapD() {\n\n    const [countryData, setCountryData] = useState([])\n\n\n    useEffect(() => {\n        const fetchCountAPI = async () => {\n            const data = await fetchCountriesData()\n            setCountryData(data)\n        }\n\n        fetchCountAPI()\n    }, [setCountryData])\n\n    return (\n        <MapContainer center={[20.5937, 78.9629]} zoom={4} scrollWheelZoom={true}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            {countryData.map((d, i) => (\n\n                <Marker\n                    key={i}\n                    position={[d.latitude, d.longitude]} >\n                    <Popup position={[d.latitude, d.longitude]}>\n                        <div>\n                            <p>Country: {d.country}</p>\n                            <p>Confirmed: <NumberFormat value={d.confirmed} displayType={'text'} thousandSeparator={true} /></p>\n                            <p>Recovered: <NumberFormat value={d.recovered} displayType={'text'} thousandSeparator={true} /></p>\n                            <p>Deaths: <NumberFormat value={d.deaths} displayType={'text'} thousandSeparator={true} /></p>\n                        </div>\n                    </Popup>\n                </Marker>\n\n            ))}\n\n        </MapContainer >\n\n    )\n}\n\nexport default MapD","export default __webpack_public_path__ + \"static/media/noimage.b95c1842.jpeg\";","import React, { useState, useEffect } from 'react'\nimport { fetchNewsCovidData } from '../utils/api'\nimport NoImage from '../../images/noimage.jpeg'\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nconst Newscovid = () => {\n    const [newsdata, setNewsData] = useState([])\n\n    useEffect(() => {\n        const fetchNews = async () => {\n            const data = await fetchNewsCovidData()\n            setNewsData(data)\n        }\n\n        fetchNews()\n    }, [setNewsData])\n    console.log(\"news\", newsdata)\n    return (\n        <div className=\"news\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Daily Covid news</h3>\n            {newsdata != undefined ? newsdata.map((data) => (\n                <>\n                    <div className=\"news-card\">\n                        <div className=\"news-img\">\n                            <img style={{ borderRadius: '10px' }} src={data.image ? data.image : NoImage} width='100%' height='250px' alt=\"image\" />\n\n                        </div>\n                        <div className=\"news-content\">\n                            <h6 style={{ letterSpacing: '0.14em', paddingBottom: '0.5em' }}>{data.title ? data.title : \"No title\"} - <span style={{ fontSize: '0.8em', opacity: \"0.5\" }}>By {data.author ? data.author : \"Anonymous\"}{\", \"}{data.source ? data.source : \"Anonymous\"}</span></h6>\n                            <p><span style={{ opacity: \"0.5\" }}>{data.content ? data.content : data.description}</span><a href={data.url}>Read more</a></p>\n                            <p style={{ fontSize: '0.8em', opacity: \"0.5\" }}><Moment format=\"ddd MMM D YYYY LT\" date={data.date} /></p>\n\n                        </div>\n                    </div>\n                </>\n            )) : <p style={{ textAlign: \"center\" }}>Data could not be fetched. Works on Safari browser. Error: 426 Upgrade Required </p>}\n\n        </div>\n    )\n}\n\nexport default Newscovid\n","import React, { useState, useEffect } from 'react';\nimport { fetchContinentData } from './utils/api'\nimport { Line } from 'react-chartjs-2'\nimport NumberFormat from 'react-number-format';\nimport Newscovid from './news/Newscovid';\n\nconst ChartContinent = () => {\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchCAPI = async () => {\n            const data = await fetchContinentData()\n            setDailyData(data)\n        }\n        fetchCAPI()\n    }, [])\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line\n                data={{\n                    labels: dailyData.map(({ continent }) => continent),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ cases }) => cases),\n                            label: 'Confirmed',\n                            borderColor: 'red',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ recovered }) => recovered),\n                            label: 'Recovered',\n                            borderColor: 'green',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'blue',\n                            fill: true\n                        }]\n                }}\n            />) :\n            \"Loading\"\n    )\n\n    return (\n        <div className=\"linechart\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Continent Tabular Data</h3>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,0,0.05)', color: 'black', border: \"1px solid black\" }}>Continent</th>\n                        <th scope=\"col\" style={{ background: 'rgba(255,0,0,0.05)', color: 'red', border: \"1px solid black\" }}>Confirmed</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,255,0,0.05)', color: 'green', border: \"1px solid black\" }}>Recovered</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,255,0.05)', color: 'blue', border: \"1px solid black\" }}>Deaths</th>\n                    </tr>\n                </thead>\n                {dailyData.map((d, i) => (\n                    <tbody key={i}>\n                        <tr>\n                            <td style={{ color: 'black', border: \"1px solid black\" }}>  {d.continent}  </td>\n                            <td style={{ color: 'red', border: \"1px solid black\" }}><NumberFormat value={d.cases} displayType={'text'} thousandSeparator={true} /> </td>\n                            <td style={{ color: 'green', border: \"1px solid black\" }}><NumberFormat value={d.recovered} displayType={'text'} thousandSeparator={true} /> </td>\n                            <td style={{ color: 'blue', border: \"1px solid black\" }}><NumberFormat value={d.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                        </tr>\n                    </tbody>\n                ))}\n            </table>\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Line Graph data</h3>\n            {lineChart}\n\n        </div>\n    )\n}\n\nexport default ChartContinent","import React, { useState, useEffect } from 'react'\nimport { fetchCountriesData } from './utils/api'\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [countryData, setCountryData] = useState([])\n\n    useEffect(() => {\n        const fetchCountAPI = async () => {\n            const data = await fetchCountriesData()\n            setCountryData(data)\n        }\n\n        fetchCountAPI()\n    }, [setCountryData])\n    console.log(countryData)\n\n    return (\n        <div>\n            <form>\n                <div className=\"form-group\">\n                    <label style={{ padding: \"20px 0 0 0\", textAlign: \"center\" }}>Country select</label>\n                    <select className=\"form-control countrySelect\" defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                        <option value=\"global\">India</option>\n                        {countryData.map((country, i) =>\n                            <option key={i} value={country.country}>{country.country}</option>\n                        )}\n\n                    </select>\n                </div>\n\n\n            </form>\n        </div>\n    )\n}\n\nexport default CountryPicker","import React from 'react';\nimport { Bar } from 'react-chartjs-2'\nimport NumberFormat from 'react-number-format';\n\nconst BarChart = (props) => {\n    const barChart = (\n        <Bar\n            data={{\n                labels: ['Confirmed', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'Total People Infected by Covid-19 stats',\n                    backgroundColor: ['red', 'green', 'blue'],\n                    data: [props.data.confirmed, props.data.recovered, props.data.deaths]\n                }]\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: `Current state in ${props.country}` }\n            }}\n        />\n\n    )\n\n    return (\n        <div className=\"linechart\">\n            <h3 style={{ padding: \"60px 0 20px 0\", textAlign: \"center\" }}>Covid-19 Stats for {props.data.country} </h3>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,0,0.05)', color: 'black', border: \"1px solid black\" }}>{props.data.country}</th>\n                        <th scope=\"col\" style={{ background: 'rgba(255,0,0,0.05)', color: 'red', border: \"1px solid black\" }}>Confirmed</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,255,0,0.05)', color: 'green', border: \"1px solid black\" }}>Recovered</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,255,0.05)', color: 'blue', border: \"1px solid black\" }}>Deaths</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\" style={{ color: 'black', border: \"1px solid black\" }}>Data</th>\n                        <td style={{ color: 'red', border: \"1px solid black\" }}><NumberFormat value={props.data.confirmed} displayType={'text'} thousandSeparator={true} /> </td>\n                        <td style={{ color: 'green', border: \"1px solid black\" }}><NumberFormat value={props.data.recovered} displayType={'text'} thousandSeparator={true} /> </td>\n                        <td style={{ color: 'blue', border: \"1px solid black\" }}><NumberFormat value={props.data.deaths} displayType={'text'} thousandSeparator={true} /> </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            {barChart}\n\n        </div >\n    )\n}\n\nexport default BarChart","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nconst Navbar = () => {\n    return (\n        <header>\n            <ul className=\"navlink\">\n                <li><Link to=\"/Covid19MapStatistics/\">Global</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/continent/\">Continent</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/country/\">Country</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/map/\">Map</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/covidnews/\">News</Link></li>\n            </ul>\n\n        </header>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div style={{ textAlign: \"center\", padding: \"2em\" }}>\n            Made with ❤️ by <a href=\"https://www.linkedin.com/in/khaidemsandip/\">Khaidem Sandip Singha</a>\n        </div>\n    )\n}\n\nexport default Footer\n","import './App.css';\nimport React from 'react';\nimport CoronaImage from './images/CoronaImage.png'\nimport { fetchDataChangeable } from './components/utils/api'\nimport Cards from './components/Cards';\nimport MapD from './components/MapD';\nimport ChartContinent from './components/ChartContinent';\nimport CountryPicker from './components/CountryPicker';\nimport BarChart from './components/BarChart';\nimport Navbar from './components/Navbar';\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from './components/Footer';\nimport Newscovid from './components/news/Newscovid';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const fetchedCData = await fetchDataChangeable();\n    this.setState({ data: fetchedCData })\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchDataChangeable(country);\n    this.setState({ data: fetchedData, country: country })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"imgContainer\">\n          <img className=\"imageCss\" src={CoronaImage} alt='Corona' />\n          <Navbar />\n        </div>\n        <Switch>\n          <Route exact path=\"/Covid19MapStatistics\">\n            <Cards />\n\n          </Route>\n          <Route path=\"/Covid19MapStatistics/continent/\">\n            <ChartContinent />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/country/\">\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\n            <BarChart data={this.state.data} country={this.state.country} />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/map/\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Map of Covid-19 Countries</h3>\n            <MapD />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/covidnews/\">\n            <Newscovid />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}