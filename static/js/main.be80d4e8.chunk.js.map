{"version":3,"sources":["CoronaImage.png","components/utils/api.js","components/Cards.js","components/MapD.js","components/ChartContinent.js","components/CountryPicker.js","components/BarChart.js","components/Navbar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["url2","fetchData","a","axios","get","response","modifiedData","confirmed","data","cases","recovered","deaths","todayCases","fetchContinentData","console","log","map","dailyData","continent","fetchDataChangeable","country","changeableUrl","fetchCountriesData","latitude","countryInfo","lat","longitude","long","id","_id","Cards","props","useState","setDailyData","useEffect","fetchCAPI","className","style","padding","textAlign","width","value","displayType","thousandSeparator","MapD","countryData","setCountryData","fetchCountAPI","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","d","i","Marker","position","Popup","ChartContinent","lineChart","length","labels","datasets","label","borderColor","fill","scope","background","color","border","CountryPicker","handleCountryChange","defaultValue","onChange","e","target","BarChart","barChart","backgroundColor","options","legend","display","title","text","Navbar","to","Footer","href","App","state","fetchedData","setState","fetchedCData","this","src","CoronaImage","alt","exact","path","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be80d4e8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CoronaImage.9e5d4fc7.png\";","import axios from 'axios'\n\nconst url1 = 'https://disease.sh/v3/covid-19/continents'\nconst url2 = 'https://disease.sh/v3/covid-19'\nconst url3 = 'https://disease.sh/v3/covid-19/countries'\nconst url = 'https://disease.sh/v3/covid-19/all'\n\nexport const fetchData = async () => {\n    try {\n        const response = await axios.get(url)\n\n        const modifiedData = {\n            confirmed: response.data.cases,\n            recovered: response.data.recovered,\n            deaths: response.data.deaths,\n            todayCases: response.data.todayCases\n        }\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\nexport const fetchContinentData = async () => {\n    try {\n        const response = await axios.get(url1)\n        console.log(response.data)\n        const modifiedData = response.data.map((dailyData) => ({\n            cases: dailyData.cases,\n            recovered: dailyData.recovered,\n            deaths: dailyData.deaths,\n            continent: dailyData.continent\n        }))\n        return modifiedData\n\n    } catch (error) {\n\n    }\n}\n\nexport const fetchDataChangeable = async (country) => {\n    let changeableUrl = `${url2}/countries/India`\n\n    if (country) {\n        changeableUrl = `${url2}/countries/${country}`\n    }\n    try {\n        const response = await axios.get(changeableUrl)\n        console.log(\"response\", response.data)\n        const modifiedData = {\n            confirmed: response.data.cases,\n            recovered: response.data.recovered,\n            deaths: response.data.deaths,\n            todayCases: response.data.todayCases,\n            country: response.data.country\n        }\n        return modifiedData\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountriesData = async () => {\n    try {\n        const response = await axios.get(url3)\n        console.log(response.data)\n        const modifiedData = response.data.map((dailyData) => ({\n            country: dailyData.country,\n            confirmed: dailyData.cases,\n            recovered: dailyData.recovered,\n            deaths: dailyData.deaths,\n            latitude: dailyData.countryInfo.lat,\n            longitude: dailyData.countryInfo.long,\n            id: dailyData.countryInfo._id\n        }))\n        return modifiedData\n\n    } catch (error) {\n\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faBriefcaseMedical, faSkullCrossbones, faAmbulance } from '@fortawesome/free-solid-svg-icons'\nimport NumberFormat from 'react-number-format';\nimport { fetchData } from './utils/api'\n\nconst Cards = (props) => {\n\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchCAPI = async () => {\n            const data = await fetchData()\n            setDailyData(data)\n        }\n        fetchCAPI()\n    }, [])\n\n    return (\n        <div >\n            <div className=\"container linechart\">\n                <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>COVID-19 GLOBAL STATS</h3>\n                <div className=\"row\">\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgConfirmedCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\">Confirmed</h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.confirmed} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgRecoveredCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\"> Recovered </h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.recovered} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col mb-2\">\n                        <div className=\"card bgDeathsCard\" style={{ width: \"100%\", textAlign: \"center\", padding: \"20px 0\" }}>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title text-muted\">Deaths</h5>\n                                <h4 className=\"card-title mt-2 \">\n                                    <NumberFormat value={dailyData.deaths} displayType={'text'} thousandSeparator={true} />\n                                </h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cards","import React, { useState, useEffect } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { fetchCountriesData } from './utils/api'\nimport NumberFormat from 'react-number-format';\n\nfunction MapD() {\n\n    const [countryData, setCountryData] = useState([])\n\n    useEffect(() => {\n        const fetchCountAPI = async () => {\n            const data = await fetchCountriesData()\n            setCountryData(data)\n        }\n\n        fetchCountAPI()\n    }, [setCountryData])\n    console.log(\"mapd\", countryData)\n\n    return (\n        <MapContainer center={[20.5937, 78.9629]} zoom={4} scrollWheelZoom={true}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            {countryData.map((d, i) => (\n\n                <Marker\n                    key={i}\n                    position={[d.latitude, d.longitude]} >\n                    <Popup position={[d.latitude, d.longitude]}>\n                        <div>\n                            <p>Country: {d.country}</p>\n                            <p>Confirmed: <NumberFormat value={d.confirmed} displayType={'text'} thousandSeparator={true} /></p>\n                            <p>Recovered: <NumberFormat value={d.recovered} displayType={'text'} thousandSeparator={true} /></p>\n                            <p>Deaths: <NumberFormat value={d.deaths} displayType={'text'} thousandSeparator={true} /></p>\n                        </div>\n                    </Popup>\n                </Marker>\n\n            ))}\n\n        </MapContainer >\n\n    )\n}\n\nexport default MapD","import React, { useState, useEffect } from 'react';\nimport { fetchContinentData } from './utils/api'\nimport { Line } from 'react-chartjs-2'\nimport NumberFormat from 'react-number-format';\n\nconst ChartContinent = () => {\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchCAPI = async () => {\n            const data = await fetchContinentData()\n            setDailyData(data)\n        }\n        fetchCAPI()\n    }, [])\n\n    const lineChart = (\n        dailyData.length ? (\n            <Line\n                data={{\n                    labels: dailyData.map(({ continent }) => continent),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ cases }) => cases),\n                            label: 'Confirmed',\n                            borderColor: 'red',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ recovered }) => recovered),\n                            label: 'Recovered',\n                            borderColor: 'green',\n                            fill: true\n                        }, {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'blue',\n                            fill: true\n                        }]\n                }}\n            />) :\n            \"Loading\"\n    )\n\n    return (\n        <div className=\"linechart\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Continent Tabular Data</h3>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,0,0.05)', color: 'black', border: \"1px solid black\" }}>Continent</th>\n                        <th scope=\"col\" style={{ background: 'rgba(255,0,0,0.05)', color: 'red', border: \"1px solid black\" }}>Confirmed</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,255,0,0.05)', color: 'green', border: \"1px solid black\" }}>Recovered</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,255,0.05)', color: 'blue', border: \"1px solid black\" }}>Deaths</th>\n                    </tr>\n                </thead>\n                {dailyData.map((d, i) => (\n                    <tbody key={i}>\n                        <tr>\n                            <td style={{ color: 'black', border: \"1px solid black\" }}>  {d.continent}  </td>\n                            <td style={{ color: 'red', border: \"1px solid black\" }}><NumberFormat value={d.cases} displayType={'text'} thousandSeparator={true} /> </td>\n                            <td style={{ color: 'green', border: \"1px solid black\" }}><NumberFormat value={d.recovered} displayType={'text'} thousandSeparator={true} /> </td>\n                            <td style={{ color: 'blue', border: \"1px solid black\" }}><NumberFormat value={d.deaths} displayType={'text'} thousandSeparator={true} /></td>\n                        </tr>\n                    </tbody>\n                ))}\n            </table>\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Line Graph data</h3>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default ChartContinent","import React, { useState, useEffect } from 'react'\nimport { fetchCountriesData } from './utils/api'\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [countryData, setCountryData] = useState([])\n\n    useEffect(() => {\n        const fetchCountAPI = async () => {\n            const data = await fetchCountriesData()\n            setCountryData(data)\n        }\n\n        fetchCountAPI()\n    }, [setCountryData])\n    console.log(countryData)\n\n    return (\n        <div>\n            <form>\n                <div className=\"form-group\">\n                    <label style={{ padding: \"20px 0 0 0\", textAlign: \"center\" }}>Country select</label>\n                    <select className=\"form-control countrySelect\" defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                        <option value=\"global\">India</option>\n                        {countryData.map((country, i) =>\n                            <option key={i} value={country.country}>{country.country}</option>\n                        )}\n\n                    </select>\n                </div>\n\n\n            </form>\n        </div>\n    )\n}\n\nexport default CountryPicker","import React from 'react';\nimport { Bar } from 'react-chartjs-2'\nimport NumberFormat from 'react-number-format';\n\nconst BarChart = (props) => {\n    const barChart = (\n        <Bar\n            data={{\n                labels: ['Confirmed', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'Total People Infected by Covid-19 stats',\n                    backgroundColor: ['red', 'green', 'blue'],\n                    data: [props.data.confirmed, props.data.recovered, props.data.deaths]\n                }]\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: `Current state in ${props.country}` }\n            }}\n        />\n\n    )\n\n    return (\n        <div className=\"linechart\">\n            <h3 style={{ padding: \"60px 0 20px 0\", textAlign: \"center\" }}>Covid-19 Stats for {props.data.country} </h3>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,0,0.05)', color: 'black', border: \"1px solid black\" }}>{props.data.country}</th>\n                        <th scope=\"col\" style={{ background: 'rgba(255,0,0,0.05)', color: 'red', border: \"1px solid black\" }}>Confirmed</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,255,0,0.05)', color: 'green', border: \"1px solid black\" }}>Recovered</th>\n                        <th scope=\"col\" style={{ background: 'rgba(0,0,255,0.05)', color: 'blue', border: \"1px solid black\" }}>Deaths</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\" style={{ color: 'black', border: \"1px solid black\" }}>Data</th>\n                        <td style={{ color: 'red', border: \"1px solid black\" }}><NumberFormat value={props.data.confirmed} displayType={'text'} thousandSeparator={true} /> </td>\n                        <td style={{ color: 'green', border: \"1px solid black\" }}><NumberFormat value={props.data.recovered} displayType={'text'} thousandSeparator={true} /> </td>\n                        <td style={{ color: 'blue', border: \"1px solid black\" }}><NumberFormat value={props.data.deaths} displayType={'text'} thousandSeparator={true} /> </td>\n                    </tr>\n                </tbody>\n            </table>\n\n            {barChart}\n\n        </div >\n    )\n}\n\nexport default BarChart","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nconst Navbar = () => {\n    return (\n        <header>\n            <ul className=\"navlink\">\n                <li><Link to=\"/Covid19MapStatistics/\">Global</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/continent/\">Continent</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/country/\">Country</Link></li>\n                <li><Link to=\"/Covid19MapStatistics/map/\">Map</Link></li>\n            </ul>\n        </header>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div style={{ textAlign: \"center\", padding: \"2em\" }}>\n            Made with ❤️ by <a href=\"https://www.linkedin.com/in/khaidemsandip/\">Khaidem Sandip Singha</a>\n        </div>\n    )\n}\n\nexport default Footer\n","import './App.css';\nimport React from 'react';\nimport CoronaImage from './CoronaImage.png'\nimport { fetchDataChangeable } from './components/utils/api'\nimport Cards from './components/Cards';\nimport MapD from './components/MapD';\nimport ChartContinent from './components/ChartContinent';\nimport CountryPicker from './components/CountryPicker';\nimport BarChart from './components/BarChart';\nimport Navbar from './components/Navbar';\nimport { Switch, Route } from \"react-router-dom\"\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const fetchedCData = await fetchDataChangeable();\n    this.setState({ data: fetchedCData })\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchDataChangeable(country);\n    this.setState({ data: fetchedData, country: country })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"imgContainer\">\n          <img className=\"imageCss\" src={CoronaImage} alt='Corona' />\n          <Navbar />\n        </div>\n        <Switch>\n          <Route exact path=\"/Covid19MapStatistics\">\n            <Cards />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/continent/\">\n            <ChartContinent />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/country/\">\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\n            <BarChart data={this.state.data} country={this.state.country} />\n          </Route>\n          <Route path=\"/Covid19MapStatistics/map/\">\n            <h3 style={{ padding: \"20px 0\", textAlign: \"center\" }}>Map of Covid-19 Countries</h3>\n            <MapD />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}